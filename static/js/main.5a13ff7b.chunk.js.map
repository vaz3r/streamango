{"version":3,"sources":["MainView.js","Header.js","serviceWorker.js","index.js","logo2.svg"],"names":["MainView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","ConvertID","AppID","includes","substring","indexOf","Loading","state","isLoading","react_default","a","createElement","handleClick","window","open","RenderGames","games","slice","pagination","map","game","i","className","key","onClick","alt","Name","src","concat","Tags","xmlns","width","height","preserveAspectRatio","viewBox","fill","fillRule","d","points","DiscountPct","SavePrice","FinalPrice","assertThisInitialized","handleScroll","innerHeight","scrollY","document","body","offsetHeight","NewPagination","setState","errorData","fetch","then","response","json","data","_this2","catch","error","console","log","fetchGames","addEventListener","Component","Header","href","logo","Boolean","location","hostname","match","ReactDOM","render","src_Header","getElementById","src_MainView_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5a13ff7b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './MainView.css';\n\nclass MainView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      games: [],\n      isLoading: false,\n      errorData: null,\n      pagination: 30\n    };\n  }\n\n  async fetchGames() {\n    this.setState({isLoading: true});\n\n    fetch('https://coresteam.appspot.com/api/v1/deals?orderby=GameIndex&ascending=true')\n    .then(response => response.json())\n    .then(data => {\n        this.setState({games: data, isLoading: false});\n    })\n    .catch(error => {\n      this.setState({errorData: error, isLoading: false});\n      console.log(error)\n    });\n  }\n\n  componentDidMount() {\n    this.fetchGames();\n    document.addEventListener('scroll', this.handleScroll);\n  }\n\n  ConvertID = (AppID) => {\n    if (AppID.includes(\",\")) {\n      return AppID.substring(0, AppID.indexOf(','));\n    } else {\n      return AppID;\n    }\n  }\n\n  Loading = () => {\n    if (this.state.isLoading === true) {\n      return <p>Loading...</p>;\n    }\n  }\n\n  handleClick = (AppID) => {\n    window.open(\"https://store.steampowered.com/app/\" + AppID);\n  }\n\n  RenderGames = () => {\n    return this.state.games.slice(0, this.state.pagination).map((game, i) => (\n      <article className=\"Card\" key={this.ConvertID(game.AppID) + i} onClick={() => {this.handleClick(this.ConvertID(game.AppID))}}>\n        <div className=\"CardImage\">\n          <img alt={game.Name} src={`https://steamcdn-a.akamaihd.net/steam/apps/${this.ConvertID(game.AppID)}/header.jpg`}></img>\n        </div>\n\n        <div className=\"CardMeta\">\n          <h3>{game.Name}</h3>\n          <p>{game.Tags}</p>\n        </div>\n\n        <div className=\"CardInfo\">\n          <svg className=\"SteamLogo\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 316 100\"><g fill=\"#eee\" fillRule=\"evenodd\"><path d=\"M50.0013547,0.00904561378 C23.8066839,0.00904561378 2.34660094,20.1942423 0.306219048,45.8464978 L27.0340946,56.889889 C29.2988058,55.3420343 32.0347212,54.4363027 34.9780566,54.4363027 C35.2418408,54.4363027 35.5044977,54.4441884 35.7649,54.4588333 L47.65097,37.2420479 C47.65097,37.1598111 47.6498427,37.0809539 47.6498427,36.9987171 C47.6498427,26.6357511 56.0864273,18.2047871 66.4563019,18.2047871 C76.8261765,18.2047871 85.2616338,26.6357511 85.2616338,36.9987171 C85.2616338,47.361683 76.8261765,55.7937735 66.4563019,55.7937735 C66.313137,55.7937735 66.1710994,55.7903939 66.030189,55.7870143 L49.0769828,67.8747005 C49.0871283,68.0955007 49.093892,68.318554 49.093892,68.5427338 C49.093892,76.3214359 42.7619444,82.649165 34.9780566,82.649165 C28.1455954,82.649165 22.4325261,77.7746619 21.1384055,71.3218878 L2.02419806,63.4248999 C7.94243284,84.3423422 27.1727504,99.6778195 50.0013547,99.6778195 C77.5431284,99.6778195 99.8689646,77.3646043 99.8689646,49.8434326 C99.8689646,22.3200078 77.5431284,0.00904561378 50.0013547,0.00904561378\"></path><path d=\"M31.5567532 75.6252392L25.4322257 73.0961753C26.5177991 75.3548716 28.3958522 77.2451919 30.8894018 78.2838543 36.278941 80.5290321 42.4936511 77.9729315 44.7403258 72.5824768 45.8281537 69.9734292 45.8349174 67.096267 44.757235 64.4815867 43.6806799 61.8680329 41.648189 59.8290104 39.0362747 58.7396542 36.4446515 57.6626898 33.668154 57.7021184 31.2287139 58.6224949L37.5572797 61.2360486C41.5332062 62.8931769 43.4123866 67.4556306 41.7564082 71.4289083 40.1004297 75.4021859 35.5326797 77.281241 31.5567532 75.6252392M57.0637815 36.977313C57.0637815 31.7817483 61.278692 27.5707725 66.4777203 27.5707725 71.6767486 27.5707725 75.8905318 31.7817483 75.8905318 36.977313 75.8905318 42.1728776 71.6767486 46.3838534 66.4777203 46.3838534 61.278692 46.3838534 57.0637815 42.1728776 57.0637815 36.977313zM78.9871777 36.9987171C78.9871777 30.0942037 73.3654183 24.4750631 66.4563019 24.4750631 59.5471855 24.4750631 53.9242989 30.0942037 53.9242989 36.9987171 53.9242989 43.9032304 59.5471855 49.520118 66.4563019 49.520118 73.3654183 49.520118 78.9871777 43.9032304 78.9871777 36.9987171L78.9871777 36.9987171zM153.126314 34.1057834L149.785048 39.9761406C147.211461 38.1781959 143.723648 37.0967253 140.678857 37.0967253 137.198935 37.0967253 135.045825 38.536433 135.045825 41.1150642 135.045825 44.2479492 138.870695 44.9768152 144.555583 47.0169643 150.666583 49.1765258 154.179196 51.7146019 154.179196 57.3067057 154.179196 64.9592362 148.157251 69.2580815 139.501974 69.2580815 135.283681 69.2580815 130.195127 68.1698518 126.283455 65.7928697L128.720641 59.283769C131.898451 60.9623014 135.699649 61.9559024 139.088261 61.9559024 143.656011 61.9559024 145.827158 60.2717374 145.827158 57.7821021 145.827158 54.9342298 142.516328 54.0769391 137.17188 52.3082841 131.081171 50.2760208 126.860624 47.60952 126.860624 41.4192278 126.860624 34.4392368 132.455329 30.4287836 140.505255 30.4287836 146.114615 30.4287836 150.623746 32.2064508 153.126314 34.1057834\"></path><polyline points=\"179.244 37.815 179.244 68.615 171.378 68.615 171.378 37.815 159.958 37.815 159.958 31.072 190.63 31.072 190.63 37.815 179.244 37.815\"></polyline><polyline points=\"207.216 37.795 207.216 46.254 222.272 46.254 222.272 52.998 207.216 52.998 207.216 61.811 224.684 61.811 224.684 68.615 199.351 68.615 199.351 31.072 224.684 31.072 224.684 37.795 207.216 37.795\"></polyline><path d=\"M249.508995,40.0290876 L244.379858,55.0592748 L254.746351,55.0592748 L249.508995,40.0290876 Z M242.243657,61.3250446 L239.756871,68.6148319 L231.50967,68.6148319 L245.595069,31.0720333 L253.51423,31.0720333 L267.99756,68.6148319 L259.470793,68.6148319 L256.929897,61.3250446 L242.243657,61.3250446 L242.243657,61.3250446 Z\"></path><polyline points=\"308.372 45.583 298.093 67.52 293.653 67.52 283.539 45.779 283.539 68.615 276.005 68.615 276.005 31.072 283.521 31.072 296.148 58.173 308.324 31.072 315.906 31.072 315.906 68.615 308.373 68.615 308.372 45.583\"></polyline></g></svg>\n          \n          <div className=\"PriceTags\">\n            <div className=\"PriceTag DiscountTag\">\n              -{game.DiscountPct}%\n            </div>\n            <div className=\"PriceTag SaveTag\">\n              SAVE ${game.SavePrice}\n            </div>\n            <div className=\"PriceTag FinalTag\">\n              ${game.FinalPrice}\n            </div>\n          </div>\n        </div>\n      </article>\n    ), this)\n  }\n\n  handleScroll = () => {\n    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 1) {\n      let NewPagination = this.state.pagination + 30;\n      this.setState({pagination: NewPagination});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"MainView\">\n        <div className=\"ViewHeader\">\n          <h1>Top Selling</h1>\n          <p>Browse the top selling discounted PC games on Steam</p>\n        </div>\n\n        <div className=\"ViewContent\">\n          {\n            this.Loading()\n          }\n          {\n            this.RenderGames()\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainView;\n","import React from 'react';\r\nimport logo from './logo2.svg';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <a href=\"/\">\r\n      <img className=\"logo\" alt=\"Steamango\" src={logo}/>\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainView from './MainView';\nimport Header from './Header';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Header />, document.getElementById('header'));\nReactDOM.render(<MainView />, document.getElementById('mainview'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo2.c9598d59.svg\";"],"sourceRoot":""}